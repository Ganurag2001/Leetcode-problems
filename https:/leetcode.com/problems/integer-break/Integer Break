class Solution {
public:
    int dp[58 + 1][57 + 1];
    
    int recursion(int n, int cur)
    {
        for (int i = 0; i < n + 1; i++) {
            for (int j = 0; j < cur + 1; j++) {
                if (i == 0 || j == 0) {
                    dp[i][j] = 1;
                }
            }
        }
        
        for (int i = 1; i < n + 1; i++) {
            for (int j = 1; j < cur + 1; j++) {
                if (i < j) {
                    dp[i][j] = dp[i][j - 1];
                }
                else {
                    dp[i][j] = max(dp[i][j - 1], j * dp[i - j][j]);
                }
            }
        }
        
        return dp[n][cur];
    }
    
    int integerBreak(int n) 
    {
        memset(dp, -1, sizeof(dp));
        return recursion(n, n - 1);    
    }
};
